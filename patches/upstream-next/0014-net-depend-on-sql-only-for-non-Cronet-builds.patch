From 6e6aa3548c4de6db5250869d8e78f6295edf4d0f Mon Sep 17 00:00:00 2001
From: Stefano Duo <stefanoduo@google.com>
Date: Tue, 7 Mar 2023 12:10:15 +0000
Subject: [PATCH] net: depend on sql only for non-Cronet builds

Cq-Include-Trybots: luci.chromium.try:android-cronet-arm-dbg,ios-m1-simulator-cronet,android_cronet,android-cronet-x86-rel-kitkat-tests,android-cronet-x86-rel,android-cronet-x86-dbg-pie-tests,android-cronet-x86-dbg-oreo-tests,android-cronet-x86-dbg-11-tests,android-cronet-x86-dbg-10-tests,android-cronet-x86-dbg,android-cronet-asan-arm-rel,android-cronet-arm64-rel,android-cronet-arm64-dbg
Change-Id: Ida2181e2a11e32f46a525ef806fcfc988f930df8
---
 net/BUILD.gn                                  | 35 +++++++++++++------
 net/socket/udp_socket_posix.cc                |  2 +-
 .../url_request_context_builder_unittest.cc   |  9 +++--
 3 files changed, 33 insertions(+), 13 deletions(-)

diff --git a/net/BUILD.gn b/net/BUILD.gn
index c8039a5bf6474..e8aafaa0c95be 100644
--- a/net/BUILD.gn
+++ b/net/BUILD.gn
@@ -112,9 +112,9 @@ source_set("constants") {
   deps = [ "//base" ]
 }
 
-buildflag_header("ios_cronet_buildflags") {
-  header = "ios_cronet_buildflags.h"
-  header_dir = "net/socket"
+buildflag_header("cronet_buildflags") {
+  header = "cronet_buildflags.h"
+  header_dir = "net/base"
   flags = [ "CRONET_BUILD=$is_cronet_build" ]
 }
 
@@ -1060,7 +1060,7 @@ component("net") {
   }
 
   deps = [
-    ":ios_cronet_buildflags",
+    ":cronet_buildflags",
     ":net_deps",
     "//build:chromeos_buildflags",
     "//net/data/ssl/chrome_root_store:gen_root_store_inc",
@@ -2211,6 +2211,7 @@ static_library("test_support") {
   configs += [ "//build/config:precompiled_headers" ]
 
   public_deps = [
+    ":cronet_buildflags",
     ":gtest_util",
     "//base",
     "//base/test:test_support",
@@ -4163,7 +4164,6 @@ test("net_unittests") {
     "disk_cache/simple/simple_test_util.h",
     "disk_cache/simple/simple_util_unittest.cc",
     "disk_cache/simple/simple_version_upgrade_unittest.cc",
-    "extras/sqlite/sqlite_persistent_cookie_store_unittest.cc",
     "filter/filter_source_stream_unittest.cc",
     "filter/gzip_source_stream_unittest.cc",
     "first_party_sets/addition_overlaps_union_find_unittest.cc",
@@ -4226,7 +4226,6 @@ test("net_unittests") {
     "log/net_log_unittest.cc",
     "log/net_log_util_unittest.cc",
     "log/net_log_values_unittest.cc",
-    "log/trace_net_log_observer_unittest.cc",
     "nqe/effective_connection_type_unittest.cc",
     "nqe/event_creator_unittest.cc",
     "nqe/network_id_unittest.cc",
@@ -4364,6 +4363,13 @@ test("net_unittests") {
     "url_request/view_cache_helper_unittest.cc",
   ]
 
+  if (!is_cronet_build) {
+    sources += [
+      "extras/sqlite/sqlite_persistent_cookie_store_unittest.cc",
+      "log/trace_net_log_observer_unittest.cc",
+    ]
+  }
+
   if (is_android) {
     sources += [
       "android/dummy_spnego_authenticator.cc",
@@ -4430,7 +4436,6 @@ test("net_unittests") {
   defines = []
 
   deps = [
-    ":extras",
     ":net",
     ":preload_decoder",
     ":quic_test_tools",
@@ -4441,7 +4446,6 @@ test("net_unittests") {
     "//base:i18n",
     "//base/third_party/dynamic_annotations",
     "//build:chromeos_buildflags",
-    "//components/sqlite_proto",
     "//crypto",
     "//crypto:test_support",
     "//net/base/registry_controlled_domains",
@@ -4452,7 +4456,6 @@ test("net_unittests") {
     "//net/http:transport_security_state_unittest_data_default",
     "//net/third_party/quiche:quiche_tests",
     "//net/tools/huffman_trie:huffman_trie_generator_sources",
-    "//sql",
     "//testing/gmock",
     "//testing/gtest",
     "//third_party/protobuf:protobuf_lite",
@@ -4465,6 +4468,14 @@ test("net_unittests") {
     deps += [ "//net/server:tests" ]
   }
 
+  if (!is_cronet_build) {
+    deps += [
+      ":extras",
+      "//components/sqlite_proto",
+      "//sql",
+    ]
+  }
+
   if (is_posix) {
     sources += [ "base/sockaddr_util_posix_unittest.cc" ]
   }
@@ -4475,7 +4486,6 @@ test("net_unittests") {
 
   if (enable_reporting) {
     sources += [
-      "extras/sqlite/sqlite_persistent_reporting_and_nel_store_unittest.cc",
       "network_error_logging/mock_persistent_nel_store_unittest.cc",
       "network_error_logging/network_error_logging_service_unittest.cc",
       "reporting/mock_persistent_reporting_store_unittest.cc",
@@ -4489,6 +4499,11 @@ test("net_unittests") {
       "reporting/reporting_service_unittest.cc",
       "reporting/reporting_uploader_unittest.cc",
     ]
+    if (!is_cronet_build) {
+      sources += [
+        "extras/sqlite/sqlite_persistent_reporting_and_nel_store_unittest.cc",
+      ]
+    }
   }
 
   data = [
diff --git a/net/socket/udp_socket_posix.cc b/net/socket/udp_socket_posix.cc
index d393fbad77119..113d1f67aedda 100644
--- a/net/socket/udp_socket_posix.cc
+++ b/net/socket/udp_socket_posix.cc
@@ -36,6 +36,7 @@
 #include "base/task/thread_pool.h"
 #include "base/trace_event/base_tracing.h"
 #include "build/chromeos_buildflags.h"
+#include "net/base/cronet_buildflags.h"
 #include "net/base/features.h"
 #include "net/base/io_buffer.h"
 #include "net/base/ip_address.h"
@@ -48,7 +49,6 @@
 #include "net/log/net_log_event_type.h"
 #include "net/log/net_log_source.h"
 #include "net/log/net_log_source_type.h"
-#include "net/socket/ios_cronet_buildflags.h"
 #include "net/socket/socket_descriptor.h"
 #include "net/socket/socket_options.h"
 #include "net/socket/socket_tag.h"
diff --git a/net/url_request/url_request_context_builder_unittest.cc b/net/url_request/url_request_context_builder_unittest.cc
index b37066d8647a2..165812d2a9cb5 100644
--- a/net/url_request/url_request_context_builder_unittest.cc
+++ b/net/url_request/url_request_context_builder_unittest.cc
@@ -28,6 +28,7 @@
 #include "net/traffic_annotation/network_traffic_annotation_test_helper.h"
 #include "net/url_request/url_request.h"
 #include "net/url_request/url_request_test_util.h"
+#include "net/base/cronet_buildflags.h"
 #include "testing/gtest/include/gtest/gtest.h"
 #include "testing/platform_test.h"
 #include "url/gurl.h"
@@ -46,7 +47,11 @@
 #if BUILDFLAG(ENABLE_REPORTING)
 #include "base/files/scoped_temp_dir.h"
 #include "base/threading/thread_task_runner_handle.h"
-#include "net/extras/sqlite/sqlite_persistent_reporting_and_nel_store.h"
+#if !BUILDFLAG(CRONET_BUILD)
+// gn check does not account for BUILDFLAG(), specify nogncheck to stop it from
+// yelling.
+#include "net/extras/sqlite/sqlite_persistent_reporting_and_nel_store.h"  // nogncheck
+#endif
 #include "net/reporting/reporting_context.h"
 #include "net/reporting/reporting_policy.h"
 #include "net/reporting/reporting_service.h"
@@ -180,7 +185,7 @@ TEST_F(URLRequestContextBuilderTest, CustomHttpAuthHandlerFactory) {
                 host_resolver_.get(), &handler));
 }
 
-#if BUILDFLAG(ENABLE_REPORTING)
+#if BUILDFLAG(ENABLE_REPORTING) && !BUILDFLAG(CRONET_BUILD)
 // See crbug.com/935209. This test ensures that shutdown occurs correctly and
 // does not crash while destoying the NEL and Reporting services in the process
 // of destroying the URLRequestContext whilst Reporting has a pending upload.
-- 
2.40.0.rc1.284.g88254d51c5-goog

