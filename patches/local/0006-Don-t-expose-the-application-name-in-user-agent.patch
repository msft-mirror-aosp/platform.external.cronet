From d61eee4d69691de0af2d1f0d1e281cc9f79f1427 Mon Sep 17 00:00:00 2001
From: Dan Stahr <danstahr@google.com>
Date: Tue, 3 Jan 2023 16:06:06 +0000
Subject: [PATCH] Don't expose the application name in user agent.

Test: m

Change-Id: Ie0bb02e38cb9a07ea34d724d6e27f74e564405b8
---
 .../net/impl/CronetEngineBuilderImpl.java     |   4 +-
 .../net/impl/CronetLibraryLoader.java         |   2 +-
 .../src/org/chromium/net/impl/UserAgent.java  | 123 ++++++++----------
 .../src/org/chromium/net/CronetTestRule.java  |   2 +-
 4 files changed, 56 insertions(+), 75 deletions(-)

diff --git a/components/cronet/android/java/src/org/chromium/net/impl/CronetEngineBuilderImpl.java b/components/cronet/android/java/src/org/chromium/net/impl/CronetEngineBuilderImpl.java
index bb406f41cd9f1..a2560329217ac 100644
--- a/components/cronet/android/java/src/org/chromium/net/impl/CronetEngineBuilderImpl.java
+++ b/components/cronet/android/java/src/org/chromium/net/impl/CronetEngineBuilderImpl.java
@@ -167,7 +167,7 @@ public abstract class CronetEngineBuilderImpl extends ICronetEngineBuilder {
 
     @Override
     public String getDefaultUserAgent() {
-        return UserAgent.from(mApplicationContext);
+        return UserAgent.getDefault();
     }
 
     @Override
@@ -231,7 +231,7 @@ public abstract class CronetEngineBuilderImpl extends ICronetEngineBuilder {
      * @return QUIC User Agent ID string.
      */
     String getDefaultQuicUserAgentId() {
-        return mQuicEnabled ? UserAgent.getQuicUserAgentIdFrom(mApplicationContext) : "";
+        return mQuicEnabled ? UserAgent.getDefaultQuicUserAgentId() : "";
     }
 
     @Override
diff --git a/components/cronet/android/java/src/org/chromium/net/impl/CronetLibraryLoader.java b/components/cronet/android/java/src/org/chromium/net/impl/CronetLibraryLoader.java
index 77b718ddfef20..3fe6a1a2127d5 100644
--- a/components/cronet/android/java/src/org/chromium/net/impl/CronetLibraryLoader.java
+++ b/components/cronet/android/java/src/org/chromium/net/impl/CronetLibraryLoader.java
@@ -144,7 +144,7 @@ public class CronetLibraryLoader {
      */
     @CalledByNative
     private static String getDefaultUserAgent() {
-        return UserAgent.from(ContextUtils.getApplicationContext());
+        return UserAgent.getDefault();
     }
 
     /**
diff --git a/components/cronet/android/java/src/org/chromium/net/impl/UserAgent.java b/components/cronet/android/java/src/org/chromium/net/impl/UserAgent.java
index c052e868bcdb0..b474a763447d3 100644
--- a/components/cronet/android/java/src/org/chromium/net/impl/UserAgent.java
+++ b/components/cronet/android/java/src/org/chromium/net/impl/UserAgent.java
@@ -4,10 +4,6 @@
 
 package org.chromium.net.impl;
 
-import android.content.Context;
-import android.content.pm.PackageInfo;
-import android.content.pm.PackageManager;
-import android.content.pm.PackageManager.NameNotFoundException;
 import android.os.Build;
 
 import java.util.Locale;
@@ -16,88 +12,73 @@ import java.util.Locale;
  * Constructs a User-Agent string.
  */
 public final class UserAgent {
-    private static final Object sLock = new Object();
-
-    private static final int VERSION_CODE_UNINITIALIZED = 0;
-    private static int sVersionCode = VERSION_CODE_UNINITIALIZED;
 
     private UserAgent() {}
 
     /**
-     * Constructs a User-Agent string including application name and version,
-     * system build version, model and Id, and Cronet version.
-     * @param context the context to fetch the application name and version
-     *         from.
-     * @return User-Agent string.
+     * Returns a default User-Agent string including  system build version, model and Id,
+     * and Cronet version.
      */
-    public static String from(Context context) {
-        StringBuilder builder = new StringBuilder();
-
-        // Our package name and version.
-        builder.append(context.getPackageName());
-        builder.append('/');
-        builder.append(versionFromContext(context));
-
-        // The platform version.
-        builder.append(" (Linux; U; Android ");
-        builder.append(Build.VERSION.RELEASE);
-        builder.append("; ");
-        builder.append(Locale.getDefault().toString());
-
-        String model = Build.MODEL;
-        if (model.length() > 0) {
-            builder.append("; ");
-            builder.append(model);
-        }
+    public static String getDefault() {
+        return UserAgentsHolder.DEFAULT_USER_AGENT;
+    }
 
-        String id = Build.ID;
-        if (id.length() > 0) {
-            builder.append("; Build/");
-            builder.append(id);
-        }
+    /**
+     * Returns default QUIC User Agent Id string including the Cronet version.
+     */
+    static String getDefaultQuicUserAgentId() {
+        return UserAgentsHolder.DEFAULT_QUIC_USER_AGENT;
+    }
 
-        builder.append(";");
-        appendCronetVersion(builder);
+    private static class UserAgentsHolder {
+        static final String DEFAULT_USER_AGENT = createDefaultUserAgent();
+        static final String DEFAULT_QUIC_USER_AGENT = createDefaultQuicUserAgent();
 
-        builder.append(')');
+        private static String createDefaultQuicUserAgent() {
+            StringBuilder builder = new StringBuilder();
 
-        return builder.toString();
-    }
+            // Application name and cronet version.
+            builder.append("AndroidHttpClient");
+            appendCronetVersion(builder);
 
-    /**
-     * Constructs default QUIC User Agent Id string including application name
-     * and Cronet version.
-     * @param context the context to fetch the application name from.
-     * @return User-Agent string.
-     */
-    static String getQuicUserAgentIdFrom(Context context) {
-        StringBuilder builder = new StringBuilder();
+            return builder.toString();
+        }
 
-        // Application name and cronet version.
-        builder.append(context.getPackageName());
-        appendCronetVersion(builder);
+        private static String createDefaultUserAgent() {
+            StringBuilder builder = new StringBuilder();
 
-        return builder.toString();
-    }
+            // Our package name and version.
+            builder.append("AndroidHttpClient");
+
+            // The platform version.
+            builder.append(" (Linux; U; Android ");
+            builder.append(Build.VERSION.RELEASE);
+            builder.append("; ");
+            builder.append(Locale.getDefault().toString());
+
+            String model = Build.MODEL;
+            if (model.length() > 0) {
+                builder.append("; ");
+                builder.append(model);
+            }
 
-    private static int versionFromContext(Context context) {
-        synchronized (sLock) {
-            if (sVersionCode == VERSION_CODE_UNINITIALIZED) {
-                PackageManager packageManager = context.getPackageManager();
-                String packageName = context.getPackageName();
-                try {
-                    PackageInfo packageInfo = packageManager.getPackageInfo(packageName, 0);
-                    sVersionCode = packageInfo.versionCode;
-                } catch (NameNotFoundException e) {
-                    throw new IllegalStateException("Cannot determine package version");
-                }
+            String id = Build.ID;
+            if (id.length() > 0) {
+                builder.append("; Build/");
+                builder.append(id);
             }
-            return sVersionCode;
+
+            builder.append(";");
+            appendCronetVersion(builder);
+
+            builder.append(')');
+
+            return builder.toString();
         }
-    }
 
-    private static void appendCronetVersion(StringBuilder builder) {
-        builder.append(" Cronet/");
-        builder.append(ImplVersion.getCronetVersion());
+        private static void appendCronetVersion(StringBuilder builder) {
+            builder.append(" Cronet/");
+            builder.append(ImplVersion.getCronetVersion());
+        }
     }
 }
diff --git a/components/cronet/android/test/javatests/src/org/chromium/net/CronetTestRule.java b/components/cronet/android/test/javatests/src/org/chromium/net/CronetTestRule.java
index 1049fdf2f9a15..dc15a53c70032 100644
--- a/components/cronet/android/test/javatests/src/org/chromium/net/CronetTestRule.java
+++ b/components/cronet/android/test/javatests/src/org/chromium/net/CronetTestRule.java
@@ -104,7 +104,7 @@ public class CronetTestRule implements TestRule {
 
         private ExperimentalCronetEngine.Builder createJavaEngineBuilder() {
             return CronetTestRule.createJavaEngineBuilder(mContext)
-                    .setUserAgent(UserAgent.from(getContext()))
+                    .setUserAgent(UserAgent.getDefault())
                     .enableQuic(true);
         }
 
-- 
2.39.0.314.g84b9a713c41-goog

