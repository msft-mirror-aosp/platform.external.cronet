From 230abd6ead96dad328aa3306fa1b111d845ec593 Mon Sep 17 00:00:00 2001
From: Dan Stahr <danstahr@google.com>
Date: Thu, 9 Feb 2023 11:47:27 +0000
Subject: [PATCH] Expose the network binding APIs in AOSP.

Test: m
Change-Id: I09509d2297a3fb1a743e81ace0644019ad294cc8
---
 Android.bp                                       |  1 +
 .../android/net/http/ExperimentalHttpEngine.java | 12 ------------
 .../android/net/http/ExperimentalUrlRequest.java | 15 ---------------
 .../api/src/android/net/http/HttpEngine.java     | 13 +++++++++++++
 .../api/src/android/net/http/UrlRequest.java     | 14 ++++++++++++++
 .../net/impl/CronetUrlRequestContext.java        | 13 +++++++------
 .../chromium/net/impl/UrlRequestBuilderImpl.java | 16 ++++++++++------
 7 files changed, 45 insertions(+), 39 deletions(-)

diff --git a/Android.bp b/Android.bp
index 2c34f3f3..ed1345fb 100644
--- a/Android.bp
+++ b/Android.bp
@@ -30,6 +30,7 @@ java_library {
     libs: [
         "androidx.annotation_annotation",
         "framework-annotations-lib",
+        "framework-connectivity.stubs.module_lib",
     ],
     sdk_version: "module_current",
 }
diff --git a/components/cronet/android/api/src/android/net/http/ExperimentalHttpEngine.java b/components/cronet/android/api/src/android/net/http/ExperimentalHttpEngine.java
index a4d4ad99..e6b40e52 100644
--- a/components/cronet/android/api/src/android/net/http/ExperimentalHttpEngine.java
+++ b/components/cronet/android/api/src/android/net/http/ExperimentalHttpEngine.java
@@ -680,16 +680,4 @@ public abstract class ExperimentalHttpEngine extends HttpEngine {
     public int getDownstreamThroughputKbps() {
         return CONNECTION_METRIC_UNKNOWN;
     }
-
-    /**
-     * Binds the engine to the specified network handle. All requests created through this engine
-     * will use the network associated to this handle. If this network disconnects all requests will
-     * fail, the exact error will depend on the stage of request processing when the network
-     * disconnects. Network handles can be obtained through {@code Network#getNetworkHandle}.
-     * Only available starting from Android Marshmallow.
-     *
-     * @param networkHandle the network handle to bind the engine to. Specify
-     *        {@link #UNBIND_NETWORK_HANDLE} to unbind.
-     */
-    public void bindToNetwork(long networkHandle) {}
 }
diff --git a/components/cronet/android/api/src/android/net/http/ExperimentalUrlRequest.java b/components/cronet/android/api/src/android/net/http/ExperimentalUrlRequest.java
index 88361b99..5ee553f6 100644
--- a/components/cronet/android/api/src/android/net/http/ExperimentalUrlRequest.java
+++ b/components/cronet/android/api/src/android/net/http/ExperimentalUrlRequest.java
@@ -105,21 +105,6 @@ public abstract class ExperimentalUrlRequest extends UrlRequest {
             return this;
         }
 
-        /**
-         * Binds the request to the specified network handle. The HTTP stack will send this request
-         * only using the network associated to this handle. If this network disconnects the request
-         * will  fail, the exact error will depend on the stage of request processing when
-         * the network disconnects. Network handles can be obtained
-         * through {@code Network#getNetworkHandle}.
-         *
-         * @param networkHandle the network handle to bind the request to. Specify
-         *        {@link ExperimentalHttpEngine#UNBIND_NETWORK_HANDLE} to unbind.
-         * @return the builder to facilitate chaining.
-         */
-        public Builder bindToNetwork(long networkHandle) {
-            return this;
-        }
-
         /**
          * Default request idempotency, only enable 0-RTT for safe HTTP methods. Passed to {@link
          * #setIdempotency}.
diff --git a/components/cronet/android/api/src/android/net/http/HttpEngine.java b/components/cronet/android/api/src/android/net/http/HttpEngine.java
index e4c543b1..cf46b0df 100644
--- a/components/cronet/android/api/src/android/net/http/HttpEngine.java
+++ b/components/cronet/android/api/src/android/net/http/HttpEngine.java
@@ -5,6 +5,9 @@
 package android.net.http;
 
 import android.content.Context;
+import android.net.Network;
+
+import androidx.annotation.Nullable;
 
 import java.io.IOException;
 import java.lang.reflect.InvocationTargetException;
@@ -451,6 +454,16 @@ public abstract class HttpEngine {
         return new byte[0];
     }
 
+    /**
+     * Binds the engine to the specified network. All requests created through this engine
+     * will use the network associated to this handle. If this network disconnects all requests will
+     * fail, the exact error will depend on the stage of request processing when the network
+     * disconnects.
+     *
+     * @param network the network to bind the engine to. Specify {@code null} to unbind.
+     */
+    public void bindToNetwork(@Nullable Network network) {}
+
     /**
      * Establishes a new connection to the resource specified by the {@link URL} {@code url}.
      * <p>
diff --git a/components/cronet/android/api/src/android/net/http/UrlRequest.java b/components/cronet/android/api/src/android/net/http/UrlRequest.java
index 983227e5..d050e426 100644
--- a/components/cronet/android/api/src/android/net/http/UrlRequest.java
+++ b/components/cronet/android/api/src/android/net/http/UrlRequest.java
@@ -5,6 +5,9 @@
 package android.net.http;
 
 import android.annotation.IntDef;
+import android.net.Network;
+
+import androidx.annotation.Nullable;
 
 import java.lang.annotation.Retention;
 import java.lang.annotation.RetentionPolicy;
@@ -118,6 +121,17 @@ public abstract class UrlRequest {
          */
         public abstract Builder allowDirectExecutor();
 
+        /**
+         * Binds the request to the specified network. The HTTP stack will send this request
+         * only using the network associated to this handle. If this network disconnects the request
+         * will  fail, the exact error will depend on the stage of request processing when
+         * the network disconnects.
+         *
+         * @param network the network to bind the request to. Specify {@code null} to unbind.
+         * @return the builder to facilitate chaining.
+         */
+        public abstract Builder bindToNetwork(@Nullable Network network);
+
         /**
          * Creates a {@link UrlRequest} using configuration within this
          * {@link Builder}. The returned {@code UrlRequest} can then be started
diff --git a/components/cronet/android/java/src/org/chromium/net/impl/CronetUrlRequestContext.java b/components/cronet/android/java/src/org/chromium/net/impl/CronetUrlRequestContext.java
index 2c4a1f7b..c9929d70 100644
--- a/components/cronet/android/java/src/org/chromium/net/impl/CronetUrlRequestContext.java
+++ b/components/cronet/android/java/src/org/chromium/net/impl/CronetUrlRequestContext.java
@@ -4,10 +4,11 @@
 
 package org.chromium.net.impl;
 
-import android.os.Build;
+import android.net.Network;
 import android.os.ConditionVariable;
 import android.os.Process;
 
+import androidx.annotation.Nullable;
 import androidx.annotation.VisibleForTesting;
 
 import org.chromium.base.Log;
@@ -471,12 +472,12 @@ public class CronetUrlRequestContext extends CronetEngineBase {
     }
 
     @Override
-    public void bindToNetwork(long networkHandle) {
-        if (Build.VERSION.SDK_INT < Build.VERSION_CODES.M) {
-            throw new UnsupportedOperationException(
-                    "The multi-network API is available starting from Android Marshmallow");
+    public void bindToNetwork(@Nullable Network network) {
+        if (network == null) {
+            mNetworkHandle = UNBIND_NETWORK_HANDLE;
+        } else {
+            mNetworkHandle = network.getNetworkHandle();
         }
-        mNetworkHandle = networkHandle;
     }
 
     @VisibleForTesting
diff --git a/components/cronet/android/java/src/org/chromium/net/impl/UrlRequestBuilderImpl.java b/components/cronet/android/java/src/org/chromium/net/impl/UrlRequestBuilderImpl.java
index 143ef190..f90111dd 100644
--- a/components/cronet/android/java/src/org/chromium/net/impl/UrlRequestBuilderImpl.java
+++ b/components/cronet/android/java/src/org/chromium/net/impl/UrlRequestBuilderImpl.java
@@ -3,8 +3,10 @@
 // found in the LICENSE file.
 package org.chromium.net.impl;
 
+import static android.net.http.ExperimentalHttpEngine.UNBIND_NETWORK_HANDLE;
+
 import android.annotation.SuppressLint;
-import android.os.Build;
+import android.net.Network;
 import android.util.Log;
 import android.util.Pair;
 
@@ -14,6 +16,8 @@ import android.net.http.RequestFinishedInfo;
 import android.net.http.UploadDataProvider;
 import android.net.http.UrlRequest;
 
+import androidx.annotation.Nullable;
+
 import java.util.ArrayList;
 import java.util.Collection;
 import java.util.concurrent.Executor;
@@ -206,12 +210,12 @@ public class UrlRequestBuilderImpl extends ExperimentalUrlRequest.Builder {
     }
 
     @Override
-    public UrlRequestBuilderImpl bindToNetwork(long networkHandle) {
-        if (Build.VERSION.SDK_INT < Build.VERSION_CODES.M) {
-            throw new UnsupportedOperationException(
-                    "The multi-network API is available starting from Android Marshmallow");
+    public UrlRequestBuilderImpl bindToNetwork(@Nullable Network network) {
+        if (network == null) {
+            mNetworkHandle = UNBIND_NETWORK_HANDLE;
+        } else {
+            mNetworkHandle = network.getNetworkHandle();
         }
-        mNetworkHandle = networkHandle;
         return this;
     }
 
-- 
2.39.1.519.gcb327c4b5f-goog

